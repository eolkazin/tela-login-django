/* Global reset */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Segoe UI", sans-serif;
}

/* Body background and animation */
body {
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  background: linear-gradient(135deg, #0f2027, #203a43, #2c5364);
  animation: fadeInBody 1s ease-in-out;
  overflow: hidden;
}

@keyframes fadeInBody {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* Login container */
.login-container {
  background-color: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  padding: 40px;
  border-radius: 15px;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.37);
  width: 100%;
  max-width: 400px;
  position: relative;
  animation: slideUp 0.8s ease-out;
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Header */
.login-container h2 {
  text-align: center;
  color: #fff;
  margin-bottom: 25px;
  font-size: 2.2rem;
  text-transform: uppercase;
  letter-spacing: 2px;
  animation: fadeIn 1.2s ease-in-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Input Group */
.input-group {
  margin-bottom: 25px;
  opacity: 0;
  animation: fadeInUp 1.2s ease-in-out forwards;
}

.input-group:nth-child(1) {
  animation-delay: 0.2s;
}

.input-group:nth-child(2) {
  animation-delay: 0.4s;
}

.input-group:nth-child(3) {
  animation-delay: 0.6s;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(15px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.input-group label {
  display: block;
  margin-bottom: 8px;
  color: #ddd;
  font-size: 14px;
}

/* Input Fields */
.input-group input {
  width: 100%;
  padding: 12px;
  border: none;
  border-radius: 8px;
  background-color: rgba(255, 255, 255, 0.1);
  color: white;
  font-size: 1rem;
  transition: background-color 0.3s ease, transform 0.2s ease,
    box-shadow 0.3s ease;
}

.input-group input:focus {
  outline: none;
  background-color: rgba(255, 255, 255, 0.2);
  transform: scale(1.03);
  box-shadow: 0 0 8px rgba(0, 123, 255, 0.6);
}

/* Button */
.btn {
  width: 100%;
  padding: 12px;
  background-color: #1e90ff;
  border: none;
  border-radius: 8px;
  color: white;
  font-weight: bold;
  cursor: pointer;
  transition: background-color 0.3s ease, transform 0.2s ease;
  position: relative;
}

.btn::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(45deg, #00c6ff, #007bff);
  opacity: 0;
  transition: opacity 0.3s ease;
  border-radius: 8px;
  z-index: -1;
}

.btn:hover {
  background-color: #1c86ee;
  transform: scale(1.05);
}

.btn:hover::before {
  opacity: 1;
}

/* Footer Text */
.footer-text {
  text-align: center;
  color: #ccc;
  margin-top: 20px;
  font-size: 14px;
  animation: fadeIn 1.5s ease-in-out;
}

.footer-text a {
  color: #1e90ff;
  text-decoration: none;
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 1px;
  transition: color 0.3s ease;
}

.error-message {
  color: red;
  font-size: 14px;
  margin-top: 10px;
}

.footer-text a:hover {
  color: #63b3ed;
}

/* Particles Animation */
@keyframes particles {
  0% {
    transform: scale(0.5);
    opacity: 0;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

.particle {
  position: absolute;
  width: 10px;
  height: 10px;
  background-color: #00c6ff;
  border-radius: 50%;
  animation: particles 2s infinite ease-in-out;
  animation-delay: calc(0.1s * var(--i));
}

.particle:nth-child(odd) {
  background-color: #007bff;
}

.particle:nth-child(even) {
  background-color: #00c6ff;
}

/* Add particles to the body */
body::after {
  content: "";
  position: absolute;
  top: 10%;
  left: 10%;
  width: 100%;
  height: 100%;
  z-index: -1;
  pointer-events: none;
}

body::after {
  display: block;
  content: "";
  animation: particlesMovement 20s linear infinite;
}

@keyframes particlesMovement {
  0% {
    transform: translateY(0) translateX(0);
  }
  100% {
    transform: translateY(100vh) translateX(100vw);
  }
}
